# -*- coding: utf-8 -*-

"""
Django settings for askmath project.

Generated by 'django-admin startproject' using Django 1.10.5.

For more information on this file, see
https://docs.djangoproject.com/en/1.10/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.10/ref/settings/
"""
import os, sys

from django.utils.translation import ugettext_lazy as _
from django.core.urlresolvers import reverse_lazy
from django.contrib.messages import constants as message_constants

from imp import reload
reload(sys)
sys.setdefaultencoding('utf-8')

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
PROJECT_DIR = os.path.dirname(__file__)
PROJECT_PATH = os.path.abspath(os.path.join(os.path.split(__file__)[0], '..'))

path = lambda *args: os.path.join(PROJECT_PATH, *args)

SITE_ID = 1

SERVER_EMAIL = u'saraiva.ufc@gmail.com'

ADMINS = [
	(u'Ciano Saraiva', u'saraiva.ufc@gmail.com'),
]

MANAGERS = [
    ('Ciano Saraiva', 'saraiva.ufc@gmail.com'),
]

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.10/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = ""

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

if DEBUG:
	ALLOWED_HOSTS = ["*"]
else:
	ALLOWED_HOSTS = ["www.askmath.org", "192.168.43.42"]

# Application definition

DJANGO_APPS = (
	'django.contrib.admin',
	'django.contrib.admindocs',
	'django.contrib.auth',
	'django.contrib.contenttypes',
	'django.contrib.sessions',
	'django.contrib.messages',
	'django.contrib.staticfiles',
	'django.contrib.humanize',
	'django.contrib.sites',
	'django.contrib.flatpages',
	'django.contrib.sitemaps',
)

THIRD_PARTY_APPS = (
	'rosetta',
	'rest_framework',
	'django_js_reverse',
)

LOCAL_APPS = (
	'base',
	'ask',
	'authentication',
	'gamification',
	'competition',
	'forum',
	'blog',
)

INSTALLED_APPS = DJANGO_APPS + THIRD_PARTY_APPS + LOCAL_APPS


MIDDLEWARE = [
	'django.middleware.security.SecurityMiddleware',
	'django.contrib.sessions.middleware.SessionMiddleware',
	'django.middleware.common.CommonMiddleware',
	'django.middleware.csrf.CsrfViewMiddleware',
	'django.contrib.auth.middleware.AuthenticationMiddleware',
	'django.contrib.messages.middleware.MessageMiddleware',
	'django.middleware.clickjacking.XFrameOptionsMiddleware',
	#to flatpages
	'django.contrib.flatpages.middleware.FlatpageFallbackMiddleware',
	#add to translate
	'django.middleware.locale.LocaleMiddleware',
	#add to timezone
	'base.middleware.timezone.TimezoneMiddleware',
]

ROOT_URLCONF = 'askmath.urls'

TEMPLATES = [
	{
		'BACKEND': 'django.template.backends.django.DjangoTemplates',
		'DIRS': [
			'base/templates',
			'ask/templates',
			'authentication/templates',
			'gamification/templates',
			'competition/templates',	
			'forum/templates',
			'blog/templates',
		],
		'APP_DIRS': True,
		'OPTIONS': {
			'context_processors': [
				'django.template.context_processors.debug',
				'django.template.context_processors.request',
				'django.contrib.auth.context_processors.auth',
				'django.contrib.messages.context_processors.messages',
				'base.context_processors.load',
				'blog.context_processors.load',
				'gamification.context_processors.load',
			],
		},
	},
]

WSGI_APPLICATION = 'askmath.wsgi.application'

#Authentication
LOGIN_URL = reverse_lazy("authentication:account_login")
LOGIN_REDIRECT_URL = reverse_lazy("ask:home")
LOGOUT_URL = reverse_lazy("authentication:account_logout")



# Database
# https://docs.djangoproject.com/en/1.10/ref/settings/#databases

DATABASES = {
	'default': {
		'ENGINE': 'django.db.backends.sqlite3',
		'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
	}
}

# Cache
CACHES = {
	'default': {
		'BACKEND': 'django.core.cache.backends.db.DatabaseCache',
		'LOCATION': 'cache',
	}
}

# Password validation
# https://docs.djangoproject.com/en/1.10/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
	{
		'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
	},
	{
		'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
	},
	{
		'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
	},
	{
		'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
	},
]


# Internationalization
# https://docs.djangoproject.com/en/1.10/topics/i18n/


FORMAT_MODULE_PATH = [
	'base.formats',
]

LOCALE_PATHS = (
	path('askmath/locale'),
	path('base/locale'),
	path('authentication/locale'),
	path('ask/locale'),
	path('gamification/locale'),
	path('competition/locale'),
	path('forum/locale'),
	path('blog/locale'),
	'/var/local/translations/locale',
)

LANGUAGES = (
	('pt-br', _('Brazilian Portuguese')),
	('en', _('English')),
)

LANGUAGE_CODE='pt-br'

TIME_ZONE = 'America/Fortaleza'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.10/howto/static-files/

STATIC_ROOT = path('static/')
STATIC_URL = '/static/'
STATICFILES_DIRS = (
	path('base/static/'),
	path('authentication/static/'),
	path('ask/static/'),
	path('gamification/static/'),
	path('competition/static/'),
	path('forum/static/'),
	path('blog/static/'),
	path('/usr/local/lib/python2.7/dist-packages/django/contrib/admin/static/admin/'),
)

MEDIA_ROOT = path('media/')
MEDIA_URL = '/media/'

# Authentication

AUTH_PROFILE_MODULE = 'authentication.User'
AUTH_USER_MODEL = 'authentication.User'

LOGIN_URL = reverse_lazy("authentication:account_login")
LOGOUT_URL = reverse_lazy("authentication:account_logout")
LOGIN_REDIRECT_URL = reverse_lazy("base:home")


# Pagination

PAGINATE_BY = 10

# MessagesTAGS

MESSAGE_TAGS = {
	message_constants.DEBUG: 'debug',
	message_constants.INFO: 'info',
	message_constants.SUCCESS: 'success',
	message_constants.WARNING: 'warning',
	message_constants.ERROR: 'danger',
}

# Session and Security - alter with connections SSL

SECURE_SSL_REDIRECT = False

SESSION_COOKIE_DOMAIN = None #.example.com
SESSION_COOKIE_NAME = "askmath_sessionid"
SESSION_COOKIE_SECURE=False

CSRF_COOKIE_DOMAIN = None #.example.com
CSRF_COOKIE_NAME = "askmath_csrftoken"
CSRF_COOKIE_SECURE=False

LANGUAGE_COOKIE_DOMAIN = None #.example.com
LANGUAGE_COOKIE_NAME = "askmath_language"

if not DEBUG:
	LOGGING = {
		'version': 1,
		'disable_existing_loggers': False,
		'filters': {
			'require_debug_false': {
				'()': 'django.utils.log.RequireDebugFalse'
			}
		},
		'handlers': {
			# Include the default Django email handler for errors
			# This is what you'd get without configuring logging at all.
			'mail_admins': {
				'class': 'django.utils.log.AdminEmailHandler',
				'level': 'ERROR',
				'filters': ['require_debug_false'],
				# But the emails are plain text by default - HTML is nicer
				'include_html': True,
			},
			# Log to a text file that can be rotated by logrotate
			'logfile': {
				'class': 'logging.handlers.WatchedFileHandler',
				'filename': '/var/log/django/askmath.log'
			},
		},
		'loggers': {
			# Again, default Django configuration to email unhandled exceptions
			'django.request': {
				'handlers': ['logfile', 'mail_admins'],
				'level': 'ERROR',
				'propagate': False,
			},
			# Might as well log any errors anywhere else in Django
			'django': {
				'handlers': ['logfile'],
			   'level': 'ERROR',
				'propagate': False,
			},
		},
	}

#**************** EXTERNAL SETTINGS ***************************

# base settings
SITE_NAME = 'AskMath'
SITE_URL = 'http://www.askmath.org'
SITE_AUTHOR = 'PET - Tecnologia da Informação'
SITE_DESCRIPTION = ''
SITE_HOME = reverse_lazy("ask:home")

# authentication settings
PERMISSIONS = {}
GROUP_PERMISSIONS = {
	"administrator": [

	],
	"teacher": [

	],
	"assistant": [

	],
	"student": [

	],
}
DEFAULT_GROUP = "student"
CONFIRM_EMAIL = False

# blog settings
BLOG_NAME = _('Blog to The AskMath')

# Reverse

JS_REVERSE_JS_VAR_NAME = 'Urls'
JS_REVERSE_JS_GLOBAL_OBJECT_NAME = 'window'
JS_REVERSE_JS_MINIFY = True
JS_REVERSE_EXCLUDE_NAMESPACES = []
JS_REVERSE_INCLUDE_ONLY_NAMESPACES = ['base', 'authentication', 'ask',]

try:
	from secrete_settings import *
except ImportError:
    pass